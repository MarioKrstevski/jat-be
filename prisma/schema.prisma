// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Company {
  id             String           @id @default(uuid())
  name           String
  description    String           @default("")
  logo           String           @default("")
  website        String           @default("")
  companySize    String           @default("")
  industry       String           @default("")
  linkedin       String           @unique @default("")
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  JobApplication JobApplication[]
  SavedCompany   SavedCompany[]
}

model SavedCompany {
  id        String   @id @default(uuid())
  userId    String
  companyId String
  company   Company? @relation(fields: [companyId], references: [id])
  Note      Note?    @relation(fields: [noteId], references: [id])
  noteId    String?

  @@index([companyId])
  @@index([noteId])
}

model JobApplicationTag {
  id     String @id @default(uuid())
  name   String @unique
  userId String
  color  String @default("#FFFFFF")
}

model JobApplication {
  userId                String
  id                    String    @id @unique @default(uuid())
  isArchived            Boolean   @default(false)
  workMode              String    @default("In Office") // In Office, Remote, Hybrid, etc
  employmentType        String    @default("Full-time") // Full-time, Part-time, Internship, Contract, etc
  offersVisaSponsorship Boolean   @default(false)
  isFavorite            Boolean   @default(false)
  offersRelocation      Boolean   @default(false)
  perks                 String    @default("") @db.VarChar(280) // Comma separated list of perks
  tags                  String    @default("") // Comma separated list of tags
  mapLocation           String    @default("") // Map location of the company lng,lat values
  wasReferred           Boolean   @default(false)
  referredBy            String    @default("")
  companyId             String?
  companyName           String
  company               Company?  @relation(fields: [companyId], references: [id])
  jobTitle              String
  jobLocation           String    @default("") // Job location (city, state, country) or address
  link                  String    @default("") // Link to the job posting
  applylink             String    @default("") // Link where to apply for this
  jobDescription        String    @db.VarChar(5000) // Job description
  status                String    @default("") // Applied, Interview, Offer, Rejected or the other statusOptions
  nextStep              String    @default("") // The next step in the process (next status)
  timeline              String    @default("") @db.VarChar(1000) // Comma separated list of Status + Date, that we will use to create a timeline
  statusOptions         String    @default("Wishlist,Applied,OA - Online Assessment,Waiting Referral,No Response,Ghosted,Phone Screen,Coding Challenge,Take-Home Assignment,Onsite,Behavioral,Interview,Offer,Rejected,Accepted,Archived") @db.VarChar(450) // Comma separated list of options
  resumeUsed            String    @default("") // Resume name or link to resume
  motivationalLetter    String    @default("") // Motvational letter or cover letter, or link to document
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  appliedDate           DateTime? // when the job was applied
  interestLevel         Int       @default(0) // 0-5
  nextInterviewDate     DateTime?
  postedDate            DateTime? // when the job was posted
  applicationDeadline   DateTime? // when the job application deadline is used before applying
  salaryDetails         String    @default("") // Salary details or negotiation-related information
  appliedFrom           String    @default("") //where did you apply for the job (linkedin, email, etc or specific link for applying)
  heardAboutFrom        String    @default("")
  todos                 String    @default("") @db.VarChar(2200) // List follow-up actions or tasks related to the application as reminder
  note                  Note?

  @@index([companyId])
  @@index([id])
}

model Note {
  id               String          @id @default(uuid())
  userId           String
  content          String          @default("") @db.VarChar(3200)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  jobApplicationId String?         @unique
  jobApplication   JobApplication? @relation(fields: [jobApplicationId], references: [id])

  savedCompany   SavedCompany[]
  savedCompanyId String?

  @@index([jobApplicationId])
}
